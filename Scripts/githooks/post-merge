#!/usr/bin/env ruby
# encoding: utf-8

require 'rubygems'
require 'pp'
require 'yaml'
require 'colorize'
require_relative './jirabureau'

module KEYS
	USERNAME = 'username'
        PASSWORD = 'password'
        CONFIG_FILE = 'jiraconfig.yml'
end

def implode(message)
	puts message.red
	abort()
end

def config_file_exists()         
	File.exist?(File.expand_path(KEYS::CONFIG_FILE))
end

def fetch_last_commit() 
	return `git log -n -1 --oneline`
end

def extract_ABIOS_from(message) 
	return message[/ABIOS[-, ]?[0-9]{4}/i]
end

def is_ABIOS_ticket(message) 
	abios = extract_ABIOS_from(message)
	isEmpty = id if abios.nil? || abios.empty?
	return !isEmpty
end


if 
	config_file_exists()
then
	credentials = YAML.load_file(KEYS::CONFIG_FILE)
else    
	message = "Houston we have a proble. We can't find %s to setup our configuration" % KEYS::CONFIG_FILE
	implode(message.red)
end

message = fetch_last_commit()
print(message)
if is_ABIOS_ticket(message) 
then 
	abios = extract_ABIOS(message)
	found_abios = ''Found %s ticket' % abios
	puts found_abios.green
 
	bureau = JiraBureau.new(credentials[KEYS::USERNAME], credentials[KEYS::PASSWORD])
	
	fetching_abios = 'Fetching %a ticket' % abios
	begin
		puts fetching_abios.green
		issue = bureau.fetchIssue(abios)
	rescue IssueNotFound => ex
		puts 'Damn'
	end
	bureau.markAsDone(issue)
else
	puts 'Please don't waste my time'.yellow
	implode("This is not an ABIOS ticket")
end
