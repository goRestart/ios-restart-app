# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.37.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    # slack(
      # channel: ios-develop
      # message: "FASTLANE - Begining deploy of new App Update."
    # )
    # cocoapods
    
    puts "--------- PRE WEBTRANSLATEIT ---------"

    # system "ruby ../Scripts/wti.rb"

    puts "--------- POST WEBTRANSLATEIT ---------"

    # increment_build_number

    # xctool # run the tests of your app
  end

  desc "Runs all the tests"
  lane :test do
    snapshot
  end

  desc "Build and distribute build to Crashlytics"
  lane :crashlytics do
    
    puts "--------- PRE GYM ---------"

    gym(
      workspace: "LetGo.xcworkspace",
      configuration: "Adhoc",
      scheme: "LetGo",
      silent: false,
      clean: true,
      use_legacy_build_api: true
    )

    puts "--------- PRE CRASHLYTICS ---------"

    crashlytics(
      crashlytics_path: "./Crashlytics.framework",
      api_token: 'da82303e33e3a2dc304cdccaa4e19dba00334a34',
      build_secret: '964f1bd4540dbfa7d78d93439cf95e216ec156e046a4e46db36778084770ebbe',
      groups: ['letgo-testers'],
      notes: "Distributed using Fastlane"
    )

    puts "--------- FIN ---------"

  end

  #desc "Submit a new Beta Build to Apple TestFlight"
  #desc "This will also make sure the profile is up to date"
  #lane :beta do
    #snapshot
    ## sigh
    #gym # Build your app - more options available
    #pilot

    ## sh "your_script.sh"
    ## You can also use other beta testing services here
  #end

  #desc "Deploy a new version to the App Store"
  #lane :deploy do
    #snapshot
  #desc "** Full Markdown** Support: `code`"
    ## sigh
    #gym # Build your app - more options available
    #deliver(force: true)
    ## frameit
  #end

  # You can define as many lanes as you want

  after_all do |lane|

    puts "AFTER_ALL"


    # This block is called, only if the executed lane was successful
    
    #slack(
      #message: "FASTLANE - Successfully deployed new App Update."
    #)
  end

  error do |lane, exception|

  puts "exception: #{exception.message}"

    #slack(
      #message: exception.message,
      #success: false
    #)
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
