# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.37.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    # slack(
      # channel: ios-develop
      # message: "FASTLANE - Begining deploy of new App Update."
    # )
    cocoapods
    
    ruby ./Scripts/wti.rb

    increment_build_number

    # xctool # run the tests of your app
  end

  desc "Runs all the tests"
  lane :test do
    snapshot
  end

  desc "Build and distribute build to Crashlytics"
  lane :crashlytics do
    gym(
      workspace: "LetGo.xcworkspace",
      configuration: "Adhoc",
      scheme: "LetGo",
      #silent: true,
      #clean: true,
      #output_directory: "path/to/dir", # Destination directory. Defaults to current directory.
      #output_name: "my-app.ipa",       # specify the name of the .ipa file to generate (including file extension)
      #sdk: "10.0"                     # use SDK as the name or path of the base SDK when building the project.
    )

    #gym(scheme: "Release")
    crashlytics(crashlytics_path: "./Crashlytics.framework/submit")
  end

  #desc "Submit a new Beta Build to Apple TestFlight"
  #desc "This will also make sure the profile is up to date"
  #lane :beta do
    #snapshot
    ## sigh
    #gym # Build your app - more options available
    #pilot

    ## sh "your_script.sh"
    ## You can also use other beta testing services here
  #end

  #desc "Deploy a new version to the App Store"
  #lane :deploy do
    #snapshot
  #desc "** Full Markdown** Support: `code`"
    ## sigh
    #gym # Build your app - more options available
    #deliver(force: true)
    ## frameit
  #end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    #slack(
      #message: "FASTLANE - Successfully deployed new App Update."
    #)
  end

  error do |lane, exception|
    #slack(
      #message: exception.message,
      #success: false
    #)
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
