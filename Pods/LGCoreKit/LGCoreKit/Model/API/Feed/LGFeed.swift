
public struct LGFeed: Feed {
    public let pagination: PaginationLinks
    public let sections: [FeedSection]
    public let items: [FeedListing]
}

extension LGFeed: Decodable {
    
    /*
     {
       "links": {
           "self": "https://customfeed.stg.letgo.com/api/feed?latitude=40.6155199&page=1&variant=4&page_size=50&longitude=-73.9539288&locale=en-US&country_code=US",
           "prev": "https://customfeed.stg.letgo.com/api/feed?latitude=40.6155199&to_timestamp=2018-07-19T13:55:38.025&page=0&variant=4&page_size=50&longitude=-73.9539288&locale=en-US&country_code=US",
           "next": "https://customfeed.stg.letgo.com/api/feed?latitude=40.6155199&to_timestamp=2018-07-19T13:55:38.025&page=2&variant=4&page_size=50&longitude=-73.9539288&locale=en-US&country_code=US"
       },
       "data": {
            "sections": [
               {
                  "id": "section1",
                  "type": "horizontal_listing",
                  "localized_title": "Horizontal stuff",
                  "links": {
                     "see_all": {
                        "href": "letgo://some/deep/link",
                        "localized_title": "See all..."
                     }
                   },
                  "items": [
                     {
                       ...
                     },
                     {
                       ...
                     }
               ],
           "items": [
              {
                "id": "g4IyuicLYj",
                "created_at": "2018-07-09T09:14:37Z",
                "updated_at": "2018-07-09T09:14:37Z",
                "category_id": 2,
                "name": "cancamusa",
                "description": "bright cancamusa with just one use",
                "autogenerated_title": {
                  "text": "blue box with a handle",
                  "is_translated": false
                },
                "owner": {
                 "id": "abdcd",
                 "name": "John Smith",
                 "avatar_url": "https://avatar/molon.jpg",
                 "zip_code": "EH6 8QP",
                 "country_code": "US",
                 "city": "Edimburgh"
                },
                "geo_data": {
                  "coords": {
                    "latitude": 34,
                    "longitude": -3
                  },
                  "country_code": "US",
                  "city": "Stirling",
                  "zip_code": "EH2 KK3"
                },
                "price": {
                  "amount": 12.5,
                  "currency": "USD",
                  "flag": "normal"
                },
                "featured": false,
                "media": {
                  "thumbnail": {
                    "type": "video",
                    "url": "https://img.letgo.com/images/dd/a2/af/07/dd92.jpeg?impolicy=img_200",
                    "width": 200,
                    "height": 300
                  },
                  "items": [
                    {
                      "image": {
                        "id": "dd92",
                        "url": "https://img.letgo.com/images/dd/a2/af/07/dd92.jpeg"
                      }
                    },
                    {
                      "image": {
                        "id": "foo",
                        "url": "https://img.letgo.com/images/dd/a2/af/07/foo.jpeg"
                      },
                      "video": {
                        "id": "bar",
                        "url": "https://img.letgo.com/images/dd/a2/af/07/bar.mpg"
                      },
                      "video_thumb": {
                        "id": "buzz",
                        "url": "https://img.letgo.com/images/dd/a2/af/07/buzz.gif"
                      }
                    }
                  ]
                }
             }
           ]
        }
    }
    */
    
    enum FeedRootKeys: String, CodingKey {
        case links, data
    }
    
    enum FeedDataKeys: String, CodingKey {
        case sections, items
    }
    
    public init(from decoder: Decoder) throws {
        let rootContainer = try decoder.container(keyedBy: FeedRootKeys.self)
        pagination = try rootContainer.decode(LGPaginationLinks.self, forKey: .links)
        let dataValues = try rootContainer.nestedContainer(keyedBy: FeedDataKeys.self, forKey: .data)
        sections = try dataValues.decode([LGFeedSection].self, forKey: .sections)
        items = try dataValues.decode(FailableDecodableArray<FeedListing>.self, forKey: .items).validElements.filter { $0.hasLocation }
    }
}
